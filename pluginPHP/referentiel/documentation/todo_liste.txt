Index des fonctions Moodle 2 : 
http://xref.icheb.info/xrefmoodle2_0_2/nav.html?_functions/index.html

Doc developpeur
http://docs.moodle.org/en/Development

$OUTPUT 
http://docs.moodle.org/en/Development:Output_renderers
un script renderer.php etend le plugin_renderer_base

Documentation migration


1) réécrire ./mod/referentiel/db/install.xml
Plus aucun ENUM
Supprimer   <STATEMENTS>
et créer un fichier db/log.php contenant
$logs = array(
    array('module'=>'referentiel', 'action'=>'add', 'mtable'=>'referentiel', 'field'=>'name'),
    array('module'=>'referentiel', 'action'=>'update', 'mtable'=>'referentiel', 'field'=>'name'),
    array('module'=>'referentiel', 'action'=>'view', 'mtable'=>'referentiel', 'field'=>'name'),
    array('module'=>'referentiel', 'action'=>'view all', 'mtable'=>'referentiel', 'field'=>'name'),
);

2) réécrire ./mod/referentiel/db/upgrade.php
Nouvelle syntaxe
$capabilities = array(
3) réécrire ./mod/referentiel/db/access.xml
componentname_capabilities array is deprecated, please use capabilities array only in access.php files
$mod_referentiel_capabilities devient  $capabilities

4) Gros travail de remplacement de tous les appels à la base de donnée par la nouvelle syntaxe

Un programme est disponible pour détecter les erreurs


Gestion des url et redirection
http://docs.moodle.org/en/Development:lib/weblib.php_moodle_url
http://docs.moodle.org/en/Development:lib/weblib.php


lib.php
================================================
global $DB;            dans toutes les fonctions
$DB->                  OK
array("id" => "$id")   OK
addslashes :: supprimés OK

rs_fetch_next_record() remplacé
    while ($digestpost = rs_fetch_next_record($digestposts_rs)) {
    remplacé par
    foreach ($digestposts_rs as $digestpost) {

{$CFG->prefix}tablename remplacé par {tablename}
OK

requêtes avec parametres nommés
$params = array("id" => "$id");
$sql="SELECT name FROM {referentiel_referentiel} WHERE id=:id";
$un_referentiel=$DB->get_record_sql($sql, $params);

=========================== get_record / addslashes / update_record ==========
lib_useers.php              :: OK
lib_cron.php                :: OK
lib_accompagnement.php      :: OK
lib_certificat.php          :: OK
lib_config.php              :: OK
lib_etab.php                :: OK
lib_task.php                :: OK
lib_pedagogie.php           :: OK
add.php                     :: OK
add.html                    :: OK
activite.php                :: OK
activite.html               :: OK
activite_edit.html          :: OK
affiche.php                 :: OK
backuplib.php               :: OK
certificat.php              :: OK
certificat.html             :: OK
certificat_add.html         :: OK
certificat_edit.html        :: OK
certificat_synthese.html    :: OK
config.html                 :: OK
config_ref.php              :: OK
config_ref.html             :: OK
delete.php                  :: OK
delete.html                 :: OK
edit.php                    :: OK
edit.html                   :: OK
edit_global.html            :: OK
etablissement.php           :: OK
etablissement_add.html      :: OK
etablissement.html          :: OK
etablissement_edit.html     :: OK
etudiant.php                :: OK
etudiant_edit.html          :: OK
etudiant.html               :: OK
export.php                  :: OK
export_activite.php         :: OK
export_certificat.php       :: OK
export_etudiant.php         :: OK
export_task.php             :: OK
format.php                  :: OK
graph_certificats.php       :: OK
import.php                  :: OK
import_etudiant.php         :: OK
import_export_lib.php       :: OK
import_task.php             :: OK
index.php                   :: OK
index.php                   :: OK
jauge.php                   :: OK
mod.htmlp                   :: OK
msword.class.php            :: OK
ooffice.class.php           :: OK
overlib_item.php            :: OK
page_lib.php                :: OK
pass.html                   :: OK
print.php                   :: OK
print_doc_odt.php           :: OK
print_doc_word.php          :: OK
print_certificat.html       :: OK
print_lib.php               :: OK
print_lib_accompagnement.php:: OK
print_lib_activite.php      :: OK
print_lib_certificat.php    :: OK
print_lib_etablissement.php :: OK
print_lib_etudiant.php      :: OK
print_lib_referentiel.php   :: OK
print_lib_task.php          :: OK
print_pdf.php               :: OK
print_rtf.php               :: OK
restorelib.php              :: OK
selection.php               :: OK
settings.php                :: OK
souscription.php            :: OK
tabs.php		    :: OK
task.php                    :: OK
task.html                   :: OK
textlib.php                 :: OK
upload.php                  :: OK
upload_consigne.html        :: OK
upload_consigne.php         :: OK
upload_document.html        :: OK
upload_logo.html            :: OK
version.php                 :: OK
view.php                    :: OK

editor/format.php                       :: OK
editor/editeur_referentiel.php          :: OK
editor/import_referentiel.php           :: OK
editor/dump_xml.php                     :: OK
editor/upload_xml.php                   :: OK

format/*/format.php	:: OK
lang/*/*		:: OK
print/*/*		:: OK


====================================

Remplacer isguest() par isguestuser()
    if (isguestuser()) {
        print_error('guestnoedit', 'glossary', "$CFG->wwwroot/mod/glossary/view.php?id=$cmid");
    }

=====================================

remplacer les formulaires par des formlibs


plagiarism
http://docs.moodle.org/en/Plagiarism_Prevention


6) AIDE : http://docs.moodle.org/en/Development:Help_strings

helpbutton() devient 
echo $OUTPUT->help_icon('strappel','module');
dans le fichier dde langue doivent exister 
strappel : titre de l'aide
strappel_help : texte de l'aide
strappel_link : lien vers moode doc  [optionnel]


/$a à remplacer par {$a} dans les chaines d'aide

7)
choose_from_menu($fileformatnames, 'format', 'xml', ''); 
est à remplacer par
echo html_writer::select($fileformatnames, 'format', 'xml', false);

===
remplacer PARAM_CLEAN par PARAM_ALPHANUMEXT
===
remplacer error() par print_error()
===
isguest() est obsolète à remplacer par isguestuser()

===
remplacer tous les $CFG->pixpath par $CFG->wwwroot.'/pix

===
8) la table moodle_role_assignment a changé
cela entraîne la réécriture des requêtes sur les rôles... dans lib_users.php

9) 
notice_yesno() has been deprecated. 
Please change your code to use 
echo $OUTPUT->confirm($message, $buttoncontinue, $buttoncancel).

Par exemple :

	notice_yesno(get_string('confirm_association_task','referentiel'),
	'task.php?d='.$referentiel->id.'&amp;select_acc='.$select_acc.'&amp;select='.$task_id.'&amp;confirm=1&amp;sesskey='.sesskey(),
        'task.php?d='.$referentiel->id);
devient :
        echo $OUTPUT->confirm(get_string('confirm_association_task','referentiel'),
	$CFG->wwwroot.'/mod/referentiel/task.php?d='.$referentiel->id.'&amp;select_acc='.$select_acc.'&amp;select='.$task_id.'&amp;confirm=1&amp;sesskey='.sesskey(),
        $CFG->wwwroot.'/mod/referentiel/task.php?d='.$referentiel->id);


10) 
button_to_popup_window() has been deprecated. Please change your code to use $OUTPUT->single_button().
button_to_popup_window ("/files/index.php?id={$course->id}&amp;choose=form.choosefile", "coursefiles", $txt->choosefile, 500, 750, $txt->choosefile);
echo $OUTPUT->single_button("$url",  array('activite_id'=>$activite_id, 'contextid'=>$context->id, 'userid'=>$USER->id)), $msg, 'get' | 'post');


11) print_table() has been deprecated. 
Please change your code to use 
echo html_writer::table().

12) utiliser & au lieu de &amp; dans les adresses de redirection

======================================


button_to_popup_window() has been deprecated. Please change your code to use $OUTPUT->single_button().


FICHIERS
----------
upload_print_form_fragment() can not be used any more, please use new file API

Development:Using the File API in Moodle forms
http://docs.moodle.org/en/Development:Using_the_File_API_in_Moodle_forms
This document shows you exactly how to use Moodle forms to get files from users in a standard and secure way.

Voici un modele pour la creation d'une nouvelle etrée dans le module glossary avec depot de fichier attaché
Repris de mod/glossary/edit.php


$entry = new stdClass();
$entry->id = null; // a remplacer par l'id de l'entree dans le gloqqaire


$maxfiles = 99;                // TODO: add some setting
$maxbytes = $course->maxbytes; // TODO: add some setting

$definitionoptions = array('trusttext'=>true, 'subdirs'=>false, 'maxfiles'=>$maxfiles, 'maxbytes'=>$maxbytes, 'context'=>$context);
$attachmentoptions = array('subdirs'=>false, 'maxfiles'=>$maxfiles, 'maxbytes'=>$maxbytes);

$entry = file_prepare_standard_editor($entry, 'definition', $definitionoptions, $context, 'mod_glossary', 'entry', $entry->id);
$entry = file_prepare_standard_filemanager($entry, 'attachment', $attachmentoptions, $context, 'mod_glossary', 'attachment', $entry->id);

$entry->cmid = $cm->id;// c'est l'id du course module de cette instance du glossaire

// create form and set initial data
// à remplacer par le corrspondant pour le module concerne 
// ne pas oublier 
// require_once('edit_form.php');
// a placer ne debut du script edit.php


$mform = new mod_glossary_entry_form(null, array('current'=>$entry, 'cm'=>$cm, 'glossary'=>$glossary,
                                                 'definitionoptions'=>$definitionoptions, 'attachmentoptions'=>$attachmentoptions));

if ($mform->is_cancelled()){
    if ($id){
        redirect("view.php?id=$cm->id&mode=entry&hook=$id");
    } else {
        redirect("view.php?id=$cm->id");
    }

} else if ($entry = $mform->get_data()) {
    $timenow = time();

    $categories = empty($entry->categories) ? array() : $entry->categories;
    unset($entry->categories);
    $aliases = trim($entry->aliases);
    unset($entry->aliases);

    if (empty($entry->id)) {
        $entry->glossaryid       = $glossary->id;
        $entry->timecreated      = $timenow;
        $entry->userid           = $USER->id;
        $entry->timecreated      = $timenow;
        $entry->sourceglossaryid = 0;
        $entry->teacherentry     = has_capability('mod/glossary:manageentries', $context);
    }

    $entry->concept          = trim($entry->concept);
    $entry->definition       = '';          // updated later
    $entry->definitionformat = FORMAT_HTML; // updated later
    $entry->definitiontrust  = 0;           // updated later
    $entry->timemodified     = $timenow;
    $entry->approved         = 0;
    $entry->usedynalink      = isset($entry->usedynalink) ?   $entry->usedynalink : 0;
    $entry->casesensitive    = isset($entry->casesensitive) ? $entry->casesensitive : 0;
    $entry->fullmatch        = isset($entry->fullmatch) ?     $entry->fullmatch : 0;

    if ($glossary->defaultapproval or has_capability('mod/glossary:approve', $context)) {
        $entry->approved = 1;
    }

    if (empty($entry->id)) {
        //new entry
        $entry->id = $DB->insert_record('glossary_entries', $entry);

        // Update completion state
        $completion = new completion_info($course);
        if ($completion->is_enabled($cm) == COMPLETION_TRACKING_AUTOMATIC && $glossary->completionentries && $entry->approved) {
            $completion->update_state($cm, COMPLETION_COMPLETE);
        }

        add_to_log($course->id, "glossary", "add entry",
                   "view.php?id=$cm->id&amp;mode=entry&amp;hook=$entry->id", $entry->id, $cm->id);

    } else {
        //existing entry
        $DB->update_record('glossary_entries', $entry);
        add_to_log($course->id, "glossary", "update entry",
                   "view.php?id=$cm->id&amp;mode=entry&amp;hook=$entry->id",
                   $entry->id, $cm->id);
    }

    // save and relink embedded images and save attachments
    $entry = file_postupdate_standard_editor($entry, 'definition', $definitionoptions, $context, 'mod_glossary', 'entry', $entry->id);
    $entry = file_postupdate_standard_filemanager($entry, 'attachment', $attachmentoptions, $context, 'mod_glossary', 'attachment', $entry->id);

    // store the updated value values
    $DB->update_record('glossary_entries', $entry);

    //refetch complete entry
    $entry = $DB->get_record('glossary_entries', array('id'=>$entry->id));

    // update entry categories
    $DB->delete_records('glossary_entries_categories', array('entryid'=>$entry->id));
    // TODO: this deletes cats from both both main and secondary glossary :-(
    if (!empty($categories) and array_search(0, $categories) === false) {
        foreach ($categories as $catid) {
            $newcategory = new stdClass();
            $newcategory->entryid    = $entry->id;
            $newcategory->categoryid = $catid;
            $DB->insert_record('glossary_entries_categories', $newcategory, false);
        }
    }

    // update aliases
    $DB->delete_records('glossary_alias', array('entryid'=>$entry->id));
    if ($aliases !== '') {
        $aliases = explode("\n", $aliases);
        foreach ($aliases as $alias) {
            $alias = trim($alias);
            if ($alias !== '') {
                $newalias = new stdClass();
                $newalias->entryid = $entry->id;
                $newalias->alias   = $alias;
                $DB->insert_record('glossary_alias', $newalias, false);
            }
        }
    }

    redirect("view.php?id=$cm->id&mode=entry&hook=$entry->id");
}

