<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sws="http://www.springframework.org/schema/web-services"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Use this for your annotation driven end point -->
	<sws:annotation-driven />
	<context:annotation-config />
	
	<context:property-placeholder location="classpath:sadocConfig.properties" />
	
	<import resource="classpath:databaseContext.xml" />
	
	<bean id="metierWSServices" class="fr.univartois.ili.sadoc.metier.ws.services.MetierWSServices" />
	<bean id="metierCommunServices" class="fr.univartois.ili.sadoc.metier.commun.services.MetierCommunServices" />
	
	<!-- Use this for autowired DI -->
	<context:component-scan base-package="fr.univartois.ili.sadoc" />
	<context:component-scan base-package="fr.univartois.ili.sadoc.ws" />
	<context:component-scan base-package="fr.univartois.ili.sadoc.ws.spring" />
	<context:component-scan base-package="fr.univartois.ili.sadoc.dao" />
	<context:component-scan base-package="fr.univartois.ili.sadoc.dao.services" />
	<context:component-scan base-package="fr.univartois.ili.sadoc.dao.entities" />

	<!-- WSDL available at http://localhost:8080/sadocWeb/services/sadoc.wsdl -->
	<sws:dynamic-wsdl id="sadoc" portTypeName="SadocServices"
		locationUri="/services/" targetNamespace="http://sadoc.com/ac/schemas">
		<sws:xsd location="/WEB-INF/sadoc-services.xsd" />
	</sws:dynamic-wsdl>

	<sws:interceptors>
		<bean id="validatingInterceptor"
			class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
			p:schemas="/WEB-INF/sadoc-services.xsd" p:validateRequest="true"
			p:validateResponse="true" />

		<bean id="loggingInterceptor"
			class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor" />
	</sws:interceptors>

	<bean id="defaultMethodEndpointAdapter"
		class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
		<property name="methodArgumentResolvers">
			<list>
				<ref bean="marshallingPayloadMethodProcessor" />
			</list>
		</property>
		<property name="methodReturnValueHandlers">
			<list>
				<ref bean="marshallingPayloadMethodProcessor" />
			</list>
		</property>
	</bean>

	<bean id="marshallingPayloadMethodProcessor"
		class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor">
		<constructor-arg ref="marshaller" />
		<constructor-arg ref="marshaller" />
	</bean>

	<bean
		class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
		<description>An endpoint mapping strategy that looks for @Endpoint and
			@PayloadRoot annotations.
		</description>
	</bean>

	<bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller">
		<property name="mappingLocation" value="/WEB-INF/sadoc-services-mapping.xml" />
		<property name="suppressXsiType" value="false"/>
	</bean>

	<bean id="wsPrivate" class="fr.univartois.ili.sadoc.ws.spring.WSPrivateImpl" />
	<bean id="wsPublic" class="fr.univartois.ili.sadoc.ws.spring.WSPublicImpl"/>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory" />

</beans>